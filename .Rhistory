if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("TxDb.Hsapiens.UCSC.hg19.knownGene")
library(TxDb.Hsapiens.UCSC.hg19.knownGene)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ChIPseeker")
library(ChIPseeker)
wd <- getwd()
path_to_input= file.path(wd, "data")
path_to_output= file.path(wd, "output")
pattern=".txt" #.narrowPeak
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
samplefiles <- list.files(path = path_to_input, pattern = pattern, full.names = T)
samplefiles <- as.list(samplefiles)
filenames <- gsub(file.path(wd, "data", "*"), "", samplefiles)
filenames <- gsub("*.narrowPeak", "", filenames)
names(samplefiles) <- filenames
peakAnnoList <- lapply(samplefiles, annotatePeak, TxDb=txdb, verbose = F, tssRegion=c(-2500, 2500))
test <- peakAnnoList[[1]]@anno
wd <- getwd()
path_to_input= file.path(wd, "data")
path_to_output= file.path(wd, "output")
pattern=".txt" #.narrowPeak
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
samplefiles <- list.files(path = path_to_input, pattern = pattern, full.names = T)
samplefiles <- as.list(samplefiles)
filenames <- gsub(file.path(wd, "data", "*"), "", samplefiles)
filenames <- gsub("*.narrowPeak", "", filenames)
names(samplefiles) <- filenames
peakAnnoList <- lapply(samplefiles, annotatePeak, TxDb=txdb, verbose = F, tssRegion=c(-2500, 2500))
wd <- getwd()
path_to_input= file.path(wd, "data")
path_to_output= file.path(wd, "output")
pattern=".txt" #.narrowPeak
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
samplefiles <- list.files(path = path_to_input, pattern = pattern, full.names = T)
samplefiles <- as.list(samplefiles)
filenames <- gsub(file.path(wd, "data", "*"), "", samplefiles)
filenames <- gsub("*.narrowPeak", "", filenames)
names(samplefiles) <- filenames
peakAnnoList <- lapply(samplefiles, annotatePeak, TxDb=txdb, verbose = F, tssRegion=c(-2500, 2500))
pdf(file = paste0(path_to_output, "/annotations_plot.pdf"), height = 3)
plotAnnoBar(peakAnnoList)
dev.off()
SaveTable <- function(n) {
anno <- data.frame(peakAnnoList[[n]]@anno)
print(str(anno))  # Print the structure of anno
write.table(anno, file = paste0(wd, "/output/", filenames[n], "_anno.xls"), sep = "\t")
}
lapply(1:length(samplefiles), SaveTable)
test <- peakAnnoList[[1]]@anno
entrezids <- test$geneId
entrez2gene <- grch37 %>%
filter(entrez %in% entrezids) %>%
dplyr::select(entrez, symbol)
library(dplyr)
test <- peakAnnoList[[1]]@anno
entrezids <- test$geneId
entrez2gene <- grch37 %>%
filter(entrez %in% entrezids) %>%
dplyr::select(entrez, symbol)
library(dplyr)
test <- peakAnnoList[[1]]@anno
entrezids <- test$geneId
entrez2gene <- hg19 %>%
filter(entrez %in% entrezids) %>%
dplyr::select(entrez, symbol)
wd <- getwd()
path_to_input= file.path(wd, "data")
path_to_output= file.path(wd, "output")
# Defining a file pattern (.txt) to search for in the input directory.
pattern=".txt" #.narrowPeak
# Loading a transcript database (TxDb.Hsapiens.UCSC.hg19.knownGene) for the human genome.
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
# Listing files in the input directory that match the specified pattern.
samplefiles <- list.files(path = path_to_input, pattern = pattern, full.names = T)
samplefiles <- as.list(samplefiles)
# Extracting filenames from the full file paths and removing the file extension.
filenames <- gsub(file.path(wd, "data", "*"), "", samplefiles)
filenames <- gsub("*.narrowPeak", "", filenames)
names(samplefiles) <- filenames
# Annotating peaks in each input file using the annotatePeak function and storing the results in a list (peakAnnoList).
peakAnnoList <- lapply(samplefiles, annotatePeak, TxDb=txdb, verbose = F, tssRegion=c(-2500, 2500))
wd <- getwd()
path_to_input= file.path(wd, "data")
path_to_output= file.path(wd, "output")
# Defining a file pattern (.txt) to search for in the input directory.
pattern=".txt" #.narrowPeak
# Loading a transcript database (TxDb.Hsapiens.UCSC.hg19.knownGene) for the human genome.
txdb <- TxDb.Hsapiens.UCSC.hg19.knownGene
# Listing files in the input directory that match the specified pattern.
samplefiles <- list.files(path = path_to_input, pattern = pattern, full.names = T)
samplefiles <- as.list(samplefiles)
# Extracting filenames from the full file paths and removing the file extension.
filenames <- gsub(file.path(wd, "data", "*"), "", samplefiles)
filenames <- gsub("*.narrowPeak", "", filenames)
names(samplefiles) <- filenames
# Annotating peaks in each input file using the annotatePeak function and storing the results in a list (peakAnnoList).
peakAnnoList <- lapply(samplefiles, annotatePeak, TxDb=txdb, verbose = F, tssRegion=c(-2500, 2500))
# Creating a PDF file for an annotation plot (annotations_plot.pdf) and plotting the annotations using plotAnnoBar.
pdf(file = paste0(path_to_output, "/annotations_plot.pdf"), height = 3)
plotAnnoBar(peakAnnoList)
dev.off()
# Defining a custom function SaveTable to save the annotation data as separate Excel files for each input file.
SaveTable <- function(n) {
anno <- data.frame(peakAnnoList[[n]]@anno)
print(str(anno))  # Print the structure of anno
write.table(anno, file = paste0(wd, "/output/", filenames[n], "_anno.xls"), sep = "\t")
}
# Using lapply to iterate through the list of input files and save their annotation data as Excel files in the output directory.
lapply(1:length(samplefiles), SaveTable)
